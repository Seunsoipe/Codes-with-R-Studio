plot(1:10)
for (x in 1:10) {
print(x)
}
text <- "awesome"
paste("R is", text)
text <- "awesome"
paste("R is", text)
text1 <- "R is"
text2 <- "awesome"
paste(text1, text2)
text <- "awesome"
paste("R is", text)
text1 <- "R is"
text2 <- "awesome"
paste(text1, text2)
# Assign the same value to multiple variables in one line
var1 <- var2 <- var3 <- "Orange"
# Print variable values
var1
var2
var3
text <- "awesome"
paste("R is", text)
text1 <- "R is"
text2 <- "awesome"
paste(text1, text2)
# Assign the same value to multiple variables in one line
var1 <- var2 <- var3 <- "Orange"
# Print variable values
var1
var2
var3
# Legal variable names:
myvar <- "John"
my_var <- "John"
myVar <- "John"
MYVAR <- "John"
myvar2 <- "John"
.myvar <- "John"
# Illegal variable names:
2myvar <- "John"
text <- "awesome"
paste("R is", text)
text1 <- "R is"
text2 <- "awesome"
paste(text1, text2)
# Assign the same value to multiple variables in one line
var1 <- var2 <- var3 <- "Orange"
# Print variable values
var1
var2
var3
# Legal variable names:
myvar <- "John"
my_var <- "John"
myVar <- "John"
MYVAR <- "John"
myvar2 <- "John"
.myvar <- "John"
# Illegal variable names:
my-var <- "John"
text <- "awesome"
paste("R is", text)
text1 <- "R is"
text2 <- "awesome"
paste(text1, text2)
# Assign the same value to multiple variables in one line
var1 <- var2 <- var3 <- "Orange"
# Print variable values
var1
var2
var3
# Legal variable names:
myvar <- "John"
my_var <- "John"
myVar <- "John"
MYVAR <- "John"
myvar2 <- "John"
.myvar <- "John"
# Illegal variable names:
2myvar <- "John"
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
str # print the value of str
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
str # print the value of str
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
cat(str)
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
str # print the value of str
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
cat(str)
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
str # print the value of str
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
cat(str)
a <- 200
b <- 33
if (b > a) {
print ("b is greater than a")
} else {
print("b is not greater than a")
}
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
str # print the value of str
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
cat(str)
a <- 200
b <- 33
if (b > a) {
print ("b is greater than a")
} else {
print("b is not greater than a")
}
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
str # print the value of str
str <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
cat(str)
a <- 200
b <- 33
if (b > a) {
print ("b is greater than a")
} else {
print("b is not greater than a")
}
x <- 41
if (x > 40){
print("Above ten")
if (x >20){
print("and also above 20!")
} else {
print("but not above 20.")
}
} else {
print("below 10.")
}
a <- 200
b <- 33
c <- 500
if (a > b & c > a) {
print("Both conditions are true")
}
a <- 200
b <- 33
c <- 500
if (a > b & c > a) {
print("Both conditions are true")
}
if (a > b | a > c) {
print("At least one of the conditions is true")
}
a <- 200
b <- 33
c <- 500
if (a > b & c > a) {
print("Both conditions are true")
}
if (a > b | a > c) {
print("At least one of the conditions is true")
}
i > 1
a <- 200
b <- 33
c <- 500
if (a > b & c > a) {
print("Both conditions are true")
}
if (a > b | a > c) {
print("At least one of the conditions is true")
}
i <- 1
while (i < 8){
print(i)
i < i + 1
}
data <- read.csv("USA_cars_datasets.csv")
data <- read.csv("USA_cars_datasets.csv")
head(data)
cor(data$price, data$year)
#To create 2 Vectors x and y
x <- c(2,3,4,5,6)
y <- c(10,12,11,12,13)
linearMod <- lm(y~x, data = data)
print(linearMod)
#To create 2 Vectors x and y
x <- c(2,3,4,5,6)
y <- c(10,12,11,12,13)
linearMod <- lm(y~x)
print(linearMod)
#meaning y = 0.6x + 9.2
data <- read.csv("HR comma sep.csv")
head(data)
cor(data$average_montly_hours, data$number_project)
linearMod <- lm(average_monthly_hours ~ number_project , data=data)  # build linear regression model on full data
linearMod <- lm(data$average_monthly_hours ~ data$number_project , data=data)  # build linear regression model on full data
linearMod <- lm(data$average_monthly_hours,data$number_project , data=data)  # build linear regression model on full data
linearMod <- lm(data$average_monthly_hours,data$number_project)  # build linear regression model on full data
linearMod <- lm(data$average_monthly_hours,data$number_project)
linearMod <- lm(c(data$average_monthly_hours), c(data$number_project))
linearMod <- lm(c(data$average_monthly_hours, data$number_project))
linearMod <- lm((data$average_monthly_hours, data$number_project))
linearMod <- lm(data$number_project ~ data$average_monthly_hours)
linearMod <- lm(data$number_project ~ data$average_monthly_hours, data=data)
linearmodd <- lm()
linearMod <- lm(data$number_project ~ data$average_monthly_hours, data=data)
data <- read.csv("HR comma sep.csv")
head(data)
cor(data$average_montly_hours, data$number_project)
linearMod <- lm(data$number_project ~ data$average_monthly_hours, data=data)
linearMod <- lm(c(data$number_project) ~ c(data$average_monthly_hours), data=data)
linearMod <- lm(c(data$number_project) ~ c(data$average_monthly_hours))
x <- c(data$average_montly_hours)
y <- c(data$average_montly_hours)
print(x)
linearMod <- lm(y ~ x)
print(linearMod)
x <- data$average_montly_hours
y <- data$average_montly_hours
print(x)
linearMod <- lm(y ~ x)
print(linearMod)
x <- data$average_montly_hours
y <- data$average_montly_hours
print(class(x))
x <- c(data$average_montly_hours)
y <- c(data$average_montly_hours)
print(class(x))
linearMod <- lm(y ~ x)
print(linearMod)
x <- c(data$number_project)
y <- c(data$average_montly_hours)
print(class(x))
linearMod <- lm(y ~ x)
print(linearMod)
x <- data$number_project
y <- data$average_montly_hours
print(class(x))
linearMod <- lm(y ~ x)
print(linearMod)
data <- read.csv("iris.csv")
head(data)
iris_standardize <- as.data.frame(scale(data[1:4]))
iris_standardize[1:5]
iris_standardize <- as.data.frame(scale(data[1:4]))
head.iris_standardize[1:5]
iris_standardize <- as.data.frame(scale(data[1:4]))
head.(iris_standardize[1:5])
iris_standardize <- as.data.frame(scale(data[1:4]))
head.(iris_standardize)
iris_standardize <- as.data.frame(scale(data[1:4]))
head(iris_standardize)
#To get the correlation
iris.mat <- as.matrix(iris_standardize)
cov.mat <- cor(iris_standardize)
print(cov.mat)
#To get the PCA
pca <- prcomp(iris_standardize,center = T,scale. = T)
summary(pca)
pca <- prcomp(iris_standardize)
summary(pca)
install.packages("ggfortify")
#Ploting and Visualizing
library(ggfortify)
install.packages("ggfortify")
#Ploting and Visualizing
library(ggfortify)
#Ploting and Visualizing
library(ggfortify)
data <- read.csv("iris.csv")
head(data)
head(iris_standardize)
iris.mat <- as.matrix(iris_standardize)
cov.mat <- cor(iris_standardize)
print(cov.mat)
library(ggfortify)
autoplot(pca, data = data, colour='variety')
install.packages("ggfortify")
library(ggfortify)
autoplot(pca, data = data, colour='variety')
install.packages("ggplot2")
library(ggfortify)
autoplot(pca, data = data, colour='variety')
library(ggplot2)
autoplot(pca, data = data, colour='variety')
library(ggfortify)
